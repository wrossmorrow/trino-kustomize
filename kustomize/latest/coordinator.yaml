# Coordinator configuration
# 
# 
apiVersion: v1
kind: ConfigMap
metadata:
  name: coordinator
  labels:
    app: trino
    trino-release: latest
    trino-component: coordinator
data:
  node.properties: |
    node.environment=dev
    node.data-dir=/data/trino
    plugin.dir=/usr/lib/trino/plugin
  jvm.config: |
    -server
    -Xmx4G
    -XX:+UseG1GC
    -XX:G1HeapRegionSize=32M
    -XX:+UseGCOverheadLimit
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -Djdk.attach.allowAttachSelf=true
    -XX:-UseBiasedLocking
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.nio.maxCachedBufferSize=2000000
  config.properties: |
    coordinator=true
    node-scheduler.include-coordinator=false
    http-server.http.port=8080
    query.max-memory=8GB
    query.max-memory-per-node=1GB
    query.max-total-memory-per-node=2GB
    memory.heap-headroom-per-node=1GB
    discovery.uri=http://localhost:8080
  log.properties: |
    io.trino=INFO
---
# Coordinator deployment spec
# 
# Note that the JVM configuration implies resource requests
# and limits; but we may not allow the coordinator to also be
# a worker. 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trino-coordinator
  labels:
    app: trino
    trino-release: latest
    trino-component: coordinator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: trino
      trino-release: latest
      trino-component: coordinator
  template:
    metadata:
      labels:
        app: trino
        trino-release: latest
        trino-component: coordinator
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      volumes:
        - name: config-volume
          configMap:
            name: trino-coordinator
        - name: catalog-volume
          configMap:
            name: trino-catalog
      containers:
        - name: trino-coordinator
          image: "trinodb/trino:latest"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /etc/trino
              name: config-volume
            - mountPath: /etc/trino/catalog
              name: catalog-volume
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info
              port: http
          resources:
            limits:
              cpu: 1500m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
      # nodeSelector:
      # affinity:
      # tolerations:
---
# Coordinator service spec
# 
# 
apiVersion: v1
kind: Service
metadata:
  name: trino
  labels:
    app: trino
    trino-release: latest
    trino-component: service
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: trino
    trino-release: latest
    trino-component: coordinator
